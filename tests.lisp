(defun test-body-part ()
  (let ((body-part (make-instance 'body-part :name 'head)))
    (setf (damage-for (damage-received body-part) 'slice) 20)
    (setf (damage-for (damage-received body-part) 'blunt) 90)
    (describe-game-object body-part)))

(defun test-body ()
  (let ((body (make-instance 'humanoid-body)))
    (setf (damage-for (damage-received (body-part body 'neck)) 'slice) 20)
    (setf (damage-for (damage-received (body-part body 'left-eye)) 'pierce) 90)
    (setf (damage-for (damage-received (body-part body 'left-eye)) 'blunt) 90)
    (setf (damage-for (damage-received (body-part body 'right-thigh)) 'blunt) 30)
    (describe-game-object body)
    (look body)))

(defun test-attack ()
  (let ((attacker (make-instance 'humanoid-body))
        (defender (make-instance 'humanoid-body))
        (weapon   (select-weapon 'dagger)))
    (attack attacker defender weapon)
    (look defender)))

(setq giant (make-instance 'humanoid-body))
(setq hobbit (make-instance 'humanoid-body))
(setq dagger (select-weapon 'dagger))
