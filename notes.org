* body parts 
** How to store body part data?
** body part data
*** name
*** static length
*** base body part - what it's attached to and depends on
*** targeting weight
*** damage descriptions
*** damage received
*** "effective" length
** What varies?
*** "effective" length varies real time
*** descriptions vary by body part type
eyes, head, etc are the same
could create a bunch of descriptions? separate from the body parts?
target size could vary from one template to the next. a googley-eyed
monster might have a better
*** templates
**** humanoid
**** quadriped
* describe generic function
* soul binding
** you have lived many lives
** when dead, your soul can be re-bound within a certain time frame
* verbs
** very help verb system, like allhailzirakh
* rooms
* items
** containers
*** max size in size units
*** very long items?
** weight 
** value
** wearable
** weapons / combat
*** enchantments
*** account for height
*** target a body part
*** change damage sets
** armor
*** protection against damage types
** magic
*** spells
**** poison - like a DOT spell that can be dispelled with herbs
*** costs, replenishment
** abilities
*** same as magic?
** status effects
*** blindness
*** slowness
*** status penalties
* storing data
* combat todo
** dodge
** block
** grapple / unarmed
*** punching
*** kicking
*** biting
*** head butt
*** elbow
*** gouge
*** throwing opponenet
** some statuses
*** blindness
*** exhaustion
**** if you use all your ap x number of times
**** every time you have AP left over, it replenishes fatigue
**** when you become exhausted, you can't do anything the next turn
*** stunned
**** activated by hitting sensitive body part
*** hiding
** grid
*** distance
** AP
*** each move takes AP
*** moving tiles takes more AP
*** disengaging from melee takes more AP than moving otherwise
*** orienting takes minimal AP
* environment
** terrain materials
*** dirt
throw dirt in eyes?
*** grass
*** branches
use as weapons, use for fires
*** water
*** flammability
* scenarios
** start a fire, set entire area on fire
* events
** examples
*** health changes
*** ap changes
*** room changes - people enter/exit
*** chat
*** movement w/in room
*** looking
*** doing actions - sit, stand, get something
*** engagement - get close enough to creature, it attacks
** example flow
*** Rob enters room occupied by Violet
*** Violet is engaged with a Giant
*** Rob should get the current state of:
**** the positions of all in the room
**** the giant's health
*** 
** possible architectures
*** more knowledge of observers
**** bodies "know" they need to notify rooms
all observed actions go to the body's room, which is a slot
**** rooms "know" they need to notify bodies
all notifications iterate over the list of bodies in the room. the
list is stored in a slot
**** room registration consists of updating above slots
*** less knowledge of observers
**** bodies are completely unaware of the nature of their observers
**** rooms are the "locus of control" when it comes to creating observers
**** drawback: have to create and destroy observers when the only thing changing is the room
** observer structure
*** make a method observable
**** before value
**** after value
